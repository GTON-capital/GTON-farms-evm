{
  "address": "0x6bb0eF710B80318A586E5217ccbAc43a3ed80090",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blocksInYear",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_apyUp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_apyDown",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "name": "RevertFlag",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDown",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldUp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDown",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newUp",
          "type": "uint256"
        }
      ],
      "name": "SetApy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldBlocksInYear",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBlocksInYear",
          "type": "uint256"
        }
      ],
      "name": "SetBlockInYear",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "SetOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "apyDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "apyUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "balanceToShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksInYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_share",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRewardBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpAdmins",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentiallyMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "admins",
          "type": "address[]"
        }
      ],
      "name": "removeAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revertFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "admins",
          "type": "address[]"
        }
      ],
      "name": "setAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apyUp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_apyDown",
          "type": "uint256"
        }
      ],
      "name": "setApy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksInYear",
          "type": "uint256"
        }
      ],
      "name": "setBlocksInYear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_share",
          "type": "uint256"
        }
      ],
      "name": "shareToBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "transferShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateRewardPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAtLastUserAction",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1df3d555ae64137b8a8f59400a191dcd5b919e3dc097a5603d09e96bf7303fb0",
  "receipt": {
    "to": null,
    "from": "0x143b0C9260EB3713327A0C17E0e1B09326763B73",
    "contractAddress": "0x6bb0eF710B80318A586E5217ccbAc43a3ed80090",
    "transactionIndex": 0,
    "gasUsed": "3120081",
    "logsBloom": "0x
    "blockHash": "0x00001725000026f98a22ad45ad22cf1e96c71ea087be8c7d7f40ef3a22caa0dd",
    "transactionHash": "0x1df3d555ae64137b8a8f59400a191dcd5b919e3dc097a5603d09e96bf7303fb0",
    "logs": [],
    "blockNumber": 6701001,
    "cumulativeGasUsed": "3120081",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc4d0a76BA5909c8e764B67aCF7360f843FbACB2d",
    1000,
    "name",
    "symbol",
    2500,
    10000
  ],
  "solcInputHash": "f74215fb67e7e6d2b9c4abfe79d3d11a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blocksInYear\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_apyUp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apyDown\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"RevertFlag\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDown\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldUp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDown\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newUp\",\"type\":\"uint256\"}],\"name\":\"SetApy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBlocksInYear\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBlocksInYear\",\"type\":\"uint256\"}],\"name\":\"SetBlockInYear\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apyDown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apyUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"balanceToShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksInYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentiallyMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"}],\"name\":\"removeAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revertFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"}],\"name\":\"setAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apyUp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apyDown\",\"type\":\"uint256\"}],\"name\":\"setApy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksInYear\",\"type\":\"uint256\"}],\"name\":\"setBlocksInYear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"shareToBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"transferShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAtLastUserAction\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CompoundStaking.sol\":\"CompoundStaking\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CompoundStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./libraries/AddressArrayLibrary.sol\\\";\\n\\ncontract CompoundStaking is IERC20 {\\n    string public name;\\n    string public symbol;\\n\\n    address public owner;\\n    \\n    bool public revertFlag;\\n    uint public totalShares;\\n    uint public potentiallyMinted;\\n    uint public lastRewardBlock;\\n    uint public requiredBalance;\\n    uint public blocksInYear;\\n    uint public apyUp;\\n    uint public apyDown;\\n    uint public decimals;\\n    address[] public lpAdmins;\\n\\n    struct UserInfo {\\n        uint share;\\n        uint tokenAtLastUserAction;\\n    }\\n\\n    IERC20 public immutable token;\\n    mapping(address => UserInfo) public userInfo;\\n    mapping(address => mapping(address => uint)) public allowances;\\n\\n    constructor(\\n        IERC20 _token,\\n        uint _blocksInYear,\\n        string memory _name,\\n        string memory _symbol,\\n        uint _apyUp,\\n        uint _apyDown\\n    ) {\\n        owner = msg.sender;\\n        token = _token;\\n        blocksInYear = _blocksInYear;\\n        lastRewardBlock = block.number;\\n        decimals = token.decimals();\\n        name = _name;\\n        symbol = _symbol;\\n        apyUp = _apyUp;\\n        apyDown = _apyDown;\\n    }\\n\\n    modifier notReverted() {\\n        require(!revertFlag, \\\"Compound: reverted flag on.\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Compound: permitted to owner only.\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender==owner || AddressArrayLib.indexOf(lpAdmins, msg.sender) != -1, \\\"Compound: permitted to admins only\\\");\\n        _;\\n    }\\n\\n    event RevertFlag(bool flag);\\n    event SetOwner(address oldOwner, address newOwner);\\n    event SetApy(uint oldDown, uint oldUp, uint newDown, uint newUp);\\n    event SetBlockInYear(uint oldBlocksInYear, uint newBlocksInYear);\\n    \\n    function totalSupply() public view returns (uint256) {\\n        uint tokenPerBlock = apyUp * requiredBalance / apyDown / blocksInYear;\\n        uint delta = block.number - lastRewardBlock;\\n        uint potentialMint = delta * tokenPerBlock;\\n        return requiredBalance+potentialMint;\\n    }\\n\\n    function balanceOf(address _user) public view returns(uint) {\\n        if(totalShares <= 0) return 0;\\n        return userInfo[_user].share * totalSupply() / totalShares;\\n    }\\n\\n    function shareToBalance(uint _share) public view returns(uint) { \\n        return _share * requiredBalance / totalShares;\\n    }\\n\\n    function balanceToShare(uint _balance) public view returns(uint) { \\n        return _balance * totalShares / requiredBalance;\\n    }\\n\\n    function setAdmins(address[] memory admins) public onlyOwner {\\n        for(uint i = 0; i < admins.length; i++) {\\n            lpAdmins.push(admins[i]);\\n        }\\n    }\\n\\n    function removeAdmins(address[] memory admins) public onlyOwner {\\n        for(uint i = 0; i < admins.length; i++) {\\n            AddressArrayLib.removeItem(lpAdmins, admins[i]);\\n        }\\n    }\\n\\n    function setApy(uint _apyUp, uint _apyDown) public onlyAdmin {\\n        uint oldDown = apyDown;\\n        uint oldUp = apyUp;\\n        apyUp = _apyUp;\\n        apyDown = _apyDown;\\n        emit SetApy(oldDown, oldUp, _apyDown, _apyUp);\\n    }\\n\\n    function setBlocksInYear(uint _blocksInYear) public onlyAdmin {\\n        updateRewardPool();\\n        uint oldBlocksInYear = blocksInYear;\\n        blocksInYear = _blocksInYear;\\n        emit SetBlockInYear(oldBlocksInYear, _blocksInYear);\\n    }\\n\\n    function toggleRevert() public onlyOwner {\\n        revertFlag = !revertFlag;\\n    }\\n\\n    function withdrawToken(IERC20 _token, address _to, uint _amount) public onlyOwner {\\n            require(_token.transfer(_to,_amount));\\n    }\\n\\n    function transferOwnership(address _owner) public onlyOwner {\\n        address oldOwner = owner;\\n        owner = _owner;\\n        emit SetOwner(oldOwner, _owner);\\n    }\\n\\n    function allowance(address _owner, address spender) external view returns (uint256) {\\n        return allowances[_owner][spender];\\n    }\\n\\n    function _approve(\\n        address _owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(_owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n        allowances[_owner][spender] = amount;\\n        emit Approval(_owner, spender, amount);\\n    }\\n\\n    function approve(address spender, uint amount) public virtual override returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint amount\\n    ) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        uint transferShare = balanceToShare(amount);\\n        require(userInfo[sender].share >= transferShare, \\\"ERC20: transfer amount exceeds balance\\\");\\n        userInfo[sender].share -= transferShare;\\n        userInfo[recipient].share += transferShare;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    function transferShare(\\n        address to,\\n        uint share\\n    ) public {\\n        require(userInfo[msg.sender].share >= share, \\\"insufficent balance\\\");\\n        userInfo[msg.sender].share -= share;\\n        userInfo[to].share += share;\\n        userInfo[msg.sender].tokenAtLastUserAction = balanceOf(msg.sender);\\n        userInfo[to].tokenAtLastUserAction = balanceOf(to);\\n    }   \\n\\n    function transferFrom(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(spender, recipient, amount);\\n        uint256 currentAllowance = allowances[spender][msg.sender];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(spender, msg.sender, currentAllowance - amount);\\n        return true;\\n    }\\n\\n    function updateRewardPool() public {\\n        uint tokenPerBlock = apyUp * requiredBalance / apyDown / blocksInYear;\\n        uint delta = block.number - lastRewardBlock;\\n        uint potentialMint = delta * tokenPerBlock;\\n        potentiallyMinted += potentialMint;\\n        requiredBalance += potentialMint;\\n        lastRewardBlock = block.number;\\n    }\\n\\n    function mint(uint _amount, address _to) external {\\n        updateRewardPool();\\n        require(_amount > 0, \\\"Compound: Nothing to deposit\\\");\\n        require(token.transferFrom(msg.sender,address(this),_amount),\\\"\\\");\\n        uint256 currentShares = 0;\\n        if (totalShares != 0) {\\n            currentShares = _amount * totalShares / requiredBalance;\\n        } else {\\n            currentShares = _amount;\\n        }\\n        totalShares += currentShares;\\n        requiredBalance += _amount;\\n        UserInfo storage user = userInfo[_to];\\n        user.share += currentShares;\\n        user.tokenAtLastUserAction = balanceOf(_to);\\n        emit Transfer(address(0), _to, _amount);\\n    }\\n\\n    function burn(address _to, uint256 _share) public {\\n        updateRewardPool();\\n        require(_share > 0, \\\"Compound: Nothing to burn\\\");\\n\\n        UserInfo storage user = userInfo[msg.sender];\\n        require(_share <= user.share, \\\"Compound: Withdraw amount exceeds balance\\\");\\n        uint256 currentAmount = requiredBalance * _share / totalShares;\\n        user.share -= _share;\\n        totalShares -= _share;\\n        requiredBalance -= currentAmount;\\n        user.tokenAtLastUserAction = balanceOf(msg.sender);\\n        require(token.transfer(_to,currentAmount),\\\"Compound: Not enough token to transfer\\\");\\n        emit Transfer(_to, address(0), currentAmount);\\n    }\\n}\",\"keccak256\":\"0x03d38e6006846a6cf70d0dbe2596bb8a23a79fe8988768accec1eeb4d433a202\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function decimals() external view returns (uint256);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n    function transfer(address _to, uint256 _value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0x48f64b21bbd9ec3e19b8ff4c926d344a7541c21dfefbc61831b3835074338c06\",\"license\":\"MIT\"},\"contracts/libraries/AddressArrayLibrary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n\\nlibrary AddressArrayLib {\\n\\n    function removeItem(\\n        address[] storage array,\\n        address a\\n    ) internal {\\n        int i = indexOf(array, a);\\n        require(i != -1, \\\"ARRAY_LIB: Element doesn't exist\\\");\\n        remove(array, uint(i));\\n    }\\n\\n    function remove(      \\n        address[] storage array,\\n        uint index\\n    ) internal {\\n        require(index <= array.length, \\\"ARRAY_LIB: Index does not exist\\\");\\n        array[index] = array[array.length-1];\\n        array.pop();\\n    }\\n\\n\\n    // probably not the best way to find index\\n    function indexOf(\\n        address[] storage array,\\n        address a\\n    ) internal view returns (int) {\\n        if (array.length == 0) return int(-1); // we want to continue txn process\\n        for(uint i=0; i<array.length; i++) {\\n            if (array[i] == a) {\\n                return int(i);\\n            }\\n        }\\n        return int(-1);\\n    }\\n}\\n\",\"keccak256\":\"0xa84cfa54314c79fe28624504c81db8d48df2d261950e449aab1d77068e9620d7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162003a2c38038062003a2c833981810160405281019062000037919062000497565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050846007819055504360058190555060805160601c73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010957600080fd5b505afa1580156200011e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000144919062000571565b600a8190555083600090805190602001906200016292919062000196565b5082600190805190602001906200017b92919062000196565b50816008819055508060098190555050505050505062000608565b828054620001a490620005d2565b90600052602060002090601f016020900481019282620001c8576000855562000214565b82601f10620001e357805160ff191683800117855562000214565b8280016001018555821562000214579182015b8281111562000213578251825591602001919060010190620001f6565b5b50905062000223919062000227565b5090565b5b808211156200024257600081600090555060010162000228565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000287826200025a565b9050919050565b60006200029b826200027a565b9050919050565b620002ad816200028e565b8114620002b957600080fd5b50565b600081519050620002cd81620002a2565b92915050565b6000819050919050565b620002e881620002d3565b8114620002f457600080fd5b50565b6000815190506200030881620002dd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003638262000318565b810181811067ffffffffffffffff8211171562000385576200038462000329565b5b80604052505050565b60006200039a62000246565b9050620003a8828262000358565b919050565b600067ffffffffffffffff821115620003cb57620003ca62000329565b5b620003d68262000318565b9050602081019050919050565b60005b8381101562000403578082015181840152602081019050620003e6565b8381111562000413576000848401525b50505050565b6000620004306200042a84620003ad565b6200038e565b9050828152602081018484840111156200044f576200044e62000313565b5b6200045c848285620003e3565b509392505050565b600082601f8301126200047c576200047b6200030e565b5b81516200048e84826020860162000419565b91505092915050565b60008060008060008060c08789031215620004b757620004b662000250565b5b6000620004c789828a01620002bc565b9650506020620004da89828a01620002f7565b955050604087015167ffffffffffffffff811115620004fe57620004fd62000255565b5b6200050c89828a0162000464565b945050606087015167ffffffffffffffff81111562000530576200052f62000255565b5b6200053e89828a0162000464565b93505060806200055189828a01620002f7565b92505060a06200056489828a01620002f7565b9150509295509295509295565b6000602082840312156200058a576200058962000250565b5b60006200059a84828501620002f7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005eb57607f821691505b60208210811415620006025762000601620005a3565b5b50919050565b60805160601c6133f76200063560003960008181610e6b015281816112770152611a7701526133f76000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80638195510511610125578063ab6a8b02116100ad578063cdcdb10e1161007c578063cdcdb10e1461061b578063daf8bc1014610625578063dd62ed3e14610641578063f2fde38b14610671578063fc0c546a1461068d57610211565b8063ab6a8b02146105bb578063accc1d5e146105c5578063b95c9d23146105e1578063c5fb862f146105ff57610211565b806395d89b41116100f457806395d89b41146105155780639dc29fac14610533578063a35e64911461054f578063a9059cbb1461056d578063a9f8d1811461059d57610211565b8063819551051461048d5780638da5cb5b146104bd57806392cf1577146104db57806394bf804d146104f957610211565b80631959a002116101a857806339a2a2a91161017757806339a2a2a9146103d35780633a98ef39146103f157806344463d6e1461040f57806355b6ed5c1461042d57806370a082311461045d57610211565b80631959a0021461033857806323b872dd14610369578063313ce56714610399578063377e11e0146103b757610211565b806312e868be116101e457806312e868be1461029e5780631363bdd3146102ba57806316522173146102ea57806318160ddd1461031a57610211565b806301e336671461021657806306fdde031461023257806308560ace14610250578063095ea7b31461026e575b600080fd5b610230600480360381019061022b9190612290565b6106ab565b005b61023a6107d6565b604051610247919061237c565b60405180910390f35b610258610864565b60405161026591906123ad565b60405180910390f35b610288600480360381019061028391906123c8565b61086a565b6040516102959190612423565b60405180910390f35b6102b860048036038101906102b391906123c8565b610881565b005b6102d460048036038101906102cf919061243e565b610a5a565b6040516102e191906123ad565b60405180910390f35b61030460048036038101906102ff919061243e565b610a7e565b604051610311919061247a565b60405180910390f35b610322610abd565b60405161032f91906123ad565b60405180910390f35b610352600480360381019061034d9190612495565b610b24565b6040516103609291906124c2565b60405180910390f35b610383600480360381019061037e91906124eb565b610b48565b6040516103909190612423565b60405180910390f35b6103a1610c3b565b6040516103ae91906123ad565b60405180910390f35b6103d160048036038101906103cc9190612686565b610c41565b005b6103db610d19565b6040516103e891906123ad565b60405180910390f35b6103f9610d1f565b60405161040691906123ad565b60405180910390f35b610417610d25565b60405161042491906123ad565b60405180910390f35b610447600480360381019061044291906126cf565b610d2b565b60405161045491906123ad565b60405180910390f35b61047760048036038101906104729190612495565b610d50565b60405161048491906123ad565b60405180910390f35b6104a760048036038101906104a2919061243e565b610dce565b6040516104b491906123ad565b60405180910390f35b6104c5610df2565b6040516104d2919061247a565b60405180910390f35b6104e3610e18565b6040516104f091906123ad565b60405180910390f35b610513600480360381019061050e919061270f565b610e1e565b005b61051d611095565b60405161052a919061237c565b60405180910390f35b61054d600480360381019061054891906123c8565b611123565b005b6105576113cd565b6040516105649190612423565b60405180910390f35b610587600480360381019061058291906123c8565b6113e0565b6040516105949190612423565b60405180910390f35b6105a56113f7565b6040516105b291906123ad565b60405180910390f35b6105c36113fd565b005b6105df60048036038101906105da9190612686565b61148b565b005b6105e96115bb565b6040516105f691906123ad565b60405180910390f35b6106196004803603810190610614919061243e565b6115c1565b005b6106236116d9565b005b61063f600480360381019061063a919061274f565b611795565b005b61065b600480360381019061065691906126cf565b6118b9565b60405161066891906123ad565b60405180910390f35b61068b60048036038101906106869190612495565b611940565b005b610695611a75565b6040516106a291906127ee565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107329061287b565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161077692919061289b565b602060405180830381600087803b15801561079057600080fd5b505af11580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c891906128f0565b6107d157600080fd5b505050565b600080546107e39061294c565b80601f016020809104026020016040519081016040528092919081815260200182805461080f9061294c565b801561085c5780601f106108315761010080835404028352916020019161085c565b820191906000526020600020905b81548152906001019060200180831161083f57829003601f168201915b505050505081565b60065481565b6000610877338484611a99565b6001905092915050565b80600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd906129ca565b60405180910390fd5b80600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109589190612a19565b9250508190555080600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109b19190612a4d565b925050819055506109c133610d50565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610a1082610d50565b600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b600060065460035483610a6d9190612aa3565b610a779190612b2c565b9050919050565b600b8181548110610a8e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600754600954600654600854610ad69190612aa3565b610ae09190612b2c565b610aea9190612b2c565b9050600060055443610afc9190612a19565b905060008282610b0c9190612aa3565b905080600654610b1c9190612a4d565b935050505090565b600c6020528060005260406000206000915090508060000154908060010154905082565b6000610b55848484611c64565b6000600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610c19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1090612bcf565b60405180910390fd5b610c2f85338584610c2a9190612a19565b611a99565b60019150509392505050565b600a5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc89061287b565b60405180910390fd5b60005b8151811015610d1557610d02600b838381518110610cf557610cf4612bef565b5b6020026020010151611ef3565b8080610d0d90612c1e565b915050610cd4565b5050565b60095481565b60035481565b60085481565b600d602052816000526040600020602052806000526040600020600091509150505481565b60008060035411610d645760009050610dc9565b600354610d6f610abd565b600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610dbc9190612aa3565b610dc69190612b2c565b90505b919050565b600060035460065483610de19190612aa3565b610deb9190612b2c565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b610e266113fd565b60008211610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090612cb3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ec693929190612cd3565b602060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1891906128f0565b610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e90612d30565b60405180910390fd5b60008060035414610f845760065460035484610f739190612aa3565b610f7d9190612b2c565b9050610f88565b8290505b8060036000828254610f9a9190612a4d565b925050819055508260066000828254610fb39190612a4d565b925050819055506000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160008282546110119190612a4d565b9250508190555061102183610d50565b81600101819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161108791906123ad565b60405180910390a350505050565b600180546110a29061294c565b80601f01602080910402602001604051908101604052809291908181526020018280546110ce9061294c565b801561111b5780601f106110f05761010080835404028352916020019161111b565b820191906000526020600020905b8154815290600101906020018083116110fe57829003601f168201915b505050505081565b61112b6113fd565b6000811161116e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116590612d9c565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548211156111f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ef90612e2e565b60405180910390fd5b60006003548360065461120b9190612aa3565b6112159190612b2c565b90508282600001600082825461122b9190612a19565b9250508190555082600360008282546112449190612a19565b92505081905550806006600082825461125d9190612a19565b9250508190555061126d33610d50565b82600101819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016112d092919061289b565b602060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132291906128f0565b611361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135890612ec0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113bf91906123ad565b60405180910390a350505050565b600260149054906101000a900460ff1681565b60006113ed338484611c64565b6001905092915050565b60055481565b60006007546009546006546008546114159190612aa3565b61141f9190612b2c565b6114299190612b2c565b905060006005544361143b9190612a19565b90506000828261144b9190612aa3565b9050806004600082825461145f9190612a4d565b9250508190555080600660008282546114789190612a4d565b9250508190555043600581905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461151b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115129061287b565b60405180910390fd5b60005b81518110156115b757600b82828151811061153c5761153b612bef565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806115af90612c1e565b91505061151e565b5050565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061164757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611644600b33611f73565b14155b611686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167d90612f52565b60405180910390fd5b61168e6113fd565b60006007549050816007819055507fd0bc40ba146b58f5ae119ff15ce2414671091ec8bf6a9c976ad6426afdac7f0581836040516116cd9291906124c2565b60405180910390a15050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611769576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117609061287b565b60405180910390fd5b600260149054906101000a900460ff1615600260146101000a81548160ff021916908315150217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061181b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611818600b33611f73565b14155b61185a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185190612f52565b60405180910390fd5b600060095490506000600854905083600881905550826009819055507fc2f9abf1c2033dc0e75b1a69bb1bc4d730d20fecd5806de688185eed4b3968ab828285876040516118ab9493929190612f72565b60405180910390a150505050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c79061287b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c6638183604051611a69929190612fb7565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0090613052565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b70906130e4565b60405180910390fd5b80600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611c5791906123ad565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ccb90613176565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3b90613208565b60405180910390fd5b6000611d4f82610a5a565b905080600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015611dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dcd9061329a565b60405180910390fd5b80600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611e289190612a19565b9250508190555080600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611e819190612a4d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611ee591906123ad565b60405180910390a350505050565b6000611eff8383611f73565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811415611f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5b90613306565b60405180910390fd5b611f6e8382612070565b505050565b60008083805490501415611fa9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061206a565b60005b8380549050811015612045578273ffffffffffffffffffffffffffffffffffffffff16848281548110611fe257611fe1612bef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612032578091505061206a565b808061203d90612c1e565b915050611fac565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b81805490508111156120b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ae90613372565b60405180910390fd5b81600183805490506120c99190612a19565b815481106120da576120d9612bef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828154811061211857612117612bef565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180548061217157612170613392565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121e9826121be565b9050919050565b60006121fb826121de565b9050919050565b61220b816121f0565b811461221657600080fd5b50565b60008135905061222881612202565b92915050565b612237816121de565b811461224257600080fd5b50565b6000813590506122548161222e565b92915050565b6000819050919050565b61226d8161225a565b811461227857600080fd5b50565b60008135905061228a81612264565b92915050565b6000806000606084860312156122a9576122a86121b4565b5b60006122b786828701612219565b93505060206122c886828701612245565b92505060406122d98682870161227b565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561231d578082015181840152602081019050612302565b8381111561232c576000848401525b50505050565b6000601f19601f8301169050919050565b600061234e826122e3565b61235881856122ee565b93506123688185602086016122ff565b61237181612332565b840191505092915050565b600060208201905081810360008301526123968184612343565b905092915050565b6123a78161225a565b82525050565b60006020820190506123c2600083018461239e565b92915050565b600080604083850312156123df576123de6121b4565b5b60006123ed85828601612245565b92505060206123fe8582860161227b565b9150509250929050565b60008115159050919050565b61241d81612408565b82525050565b60006020820190506124386000830184612414565b92915050565b600060208284031215612454576124536121b4565b5b60006124628482850161227b565b91505092915050565b612474816121de565b82525050565b600060208201905061248f600083018461246b565b92915050565b6000602082840312156124ab576124aa6121b4565b5b60006124b984828501612245565b91505092915050565b60006040820190506124d7600083018561239e565b6124e4602083018461239e565b9392505050565b600080600060608486031215612504576125036121b4565b5b600061251286828701612245565b935050602061252386828701612245565b92505060406125348682870161227b565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61257b82612332565b810181811067ffffffffffffffff8211171561259a57612599612543565b5b80604052505050565b60006125ad6121aa565b90506125b98282612572565b919050565b600067ffffffffffffffff8211156125d9576125d8612543565b5b602082029050602081019050919050565b600080fd5b60006126026125fd846125be565b6125a3565b90508083825260208201905060208402830185811115612625576126246125ea565b5b835b8181101561264e578061263a8882612245565b845260208401935050602081019050612627565b5050509392505050565b600082601f83011261266d5761266c61253e565b5b813561267d8482602086016125ef565b91505092915050565b60006020828403121561269c5761269b6121b4565b5b600082013567ffffffffffffffff8111156126ba576126b96121b9565b5b6126c684828501612658565b91505092915050565b600080604083850312156126e6576126e56121b4565b5b60006126f485828601612245565b925050602061270585828601612245565b9150509250929050565b60008060408385031215612726576127256121b4565b5b60006127348582860161227b565b925050602061274585828601612245565b9150509250929050565b60008060408385031215612766576127656121b4565b5b60006127748582860161227b565b92505060206127858582860161227b565b9150509250929050565b6000819050919050565b60006127b46127af6127aa846121be565b61278f565b6121be565b9050919050565b60006127c682612799565b9050919050565b60006127d8826127bb565b9050919050565b6127e8816127cd565b82525050565b600060208201905061280360008301846127df565b92915050565b7f436f6d706f756e643a207065726d697474656420746f206f776e6572206f6e6c60008201527f792e000000000000000000000000000000000000000000000000000000000000602082015250565b60006128656022836122ee565b915061287082612809565b604082019050919050565b6000602082019050818103600083015261289481612858565b9050919050565b60006040820190506128b0600083018561246b565b6128bd602083018461239e565b9392505050565b6128cd81612408565b81146128d857600080fd5b50565b6000815190506128ea816128c4565b92915050565b600060208284031215612906576129056121b4565b5b6000612914848285016128db565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061296457607f821691505b602082108114156129785761297761291d565b5b50919050565b7f696e737566666963656e742062616c616e636500000000000000000000000000600082015250565b60006129b46013836122ee565b91506129bf8261297e565b602082019050919050565b600060208201905081810360008301526129e3816129a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a248261225a565b9150612a2f8361225a565b925082821015612a4257612a416129ea565b5b828203905092915050565b6000612a588261225a565b9150612a638361225a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a9857612a976129ea565b5b828201905092915050565b6000612aae8261225a565b9150612ab98361225a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612af257612af16129ea565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b378261225a565b9150612b428361225a565b925082612b5257612b51612afd565b5b828204905092915050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000612bb96028836122ee565b9150612bc482612b5d565b604082019050919050565b60006020820190508181036000830152612be881612bac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612c298261225a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c5c57612c5b6129ea565b5b600182019050919050565b7f436f6d706f756e643a204e6f7468696e6720746f206465706f73697400000000600082015250565b6000612c9d601c836122ee565b9150612ca882612c67565b602082019050919050565b60006020820190508181036000830152612ccc81612c90565b9050919050565b6000606082019050612ce8600083018661246b565b612cf5602083018561246b565b612d02604083018461239e565b949350505050565b50565b6000612d1a6000836122ee565b9150612d2582612d0a565b600082019050919050565b60006020820190508181036000830152612d4981612d0d565b9050919050565b7f436f6d706f756e643a204e6f7468696e6720746f206275726e00000000000000600082015250565b6000612d866019836122ee565b9150612d9182612d50565b602082019050919050565b60006020820190508181036000830152612db581612d79565b9050919050565b7f436f6d706f756e643a20576974686472617720616d6f756e742065786365656460008201527f732062616c616e63650000000000000000000000000000000000000000000000602082015250565b6000612e186029836122ee565b9150612e2382612dbc565b604082019050919050565b60006020820190508181036000830152612e4781612e0b565b9050919050565b7f436f6d706f756e643a204e6f7420656e6f75676820746f6b656e20746f20747260008201527f616e736665720000000000000000000000000000000000000000000000000000602082015250565b6000612eaa6026836122ee565b9150612eb582612e4e565b604082019050919050565b60006020820190508181036000830152612ed981612e9d565b9050919050565b7f436f6d706f756e643a207065726d697474656420746f2061646d696e73206f6e60008201527f6c79000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f3c6022836122ee565b9150612f4782612ee0565b604082019050919050565b60006020820190508181036000830152612f6b81612f2f565b9050919050565b6000608082019050612f87600083018761239e565b612f94602083018661239e565b612fa1604083018561239e565b612fae606083018461239e565b95945050505050565b6000604082019050612fcc600083018561246b565b612fd9602083018461246b565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061303c6024836122ee565b915061304782612fe0565b604082019050919050565b6000602082019050818103600083015261306b8161302f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006130ce6022836122ee565b91506130d982613072565b604082019050919050565b600060208201905081810360008301526130fd816130c1565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006131606025836122ee565b915061316b82613104565b604082019050919050565b6000602082019050818103600083015261318f81613153565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006131f26023836122ee565b91506131fd82613196565b604082019050919050565b60006020820190508181036000830152613221816131e5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006132846026836122ee565b915061328f82613228565b604082019050919050565b600060208201905081810360008301526132b381613277565b9050919050565b7f41525241595f4c49423a20456c656d656e7420646f65736e2774206578697374600082015250565b60006132f06020836122ee565b91506132fb826132ba565b602082019050919050565b6000602082019050818103600083015261331f816132e3565b9050919050565b7f41525241595f4c49423a20496e64657820646f6573206e6f7420657869737400600082015250565b600061335c601f836122ee565b915061336782613326565b602082019050919050565b6000602082019050818103600083015261338b8161334f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212208674d8500a82d2662e2d93857d9e3a3e71c7d583a720bf8d6dd5a120bac6d70864736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102115760003560e01c80638195510511610125578063ab6a8b02116100ad578063cdcdb10e1161007c578063cdcdb10e1461061b578063daf8bc1014610625578063dd62ed3e14610641578063f2fde38b14610671578063fc0c546a1461068d57610211565b8063ab6a8b02146105bb578063accc1d5e146105c5578063b95c9d23146105e1578063c5fb862f146105ff57610211565b806395d89b41116100f457806395d89b41146105155780639dc29fac14610533578063a35e64911461054f578063a9059cbb1461056d578063a9f8d1811461059d57610211565b8063819551051461048d5780638da5cb5b146104bd57806392cf1577146104db57806394bf804d146104f957610211565b80631959a002116101a857806339a2a2a91161017757806339a2a2a9146103d35780633a98ef39146103f157806344463d6e1461040f57806355b6ed5c1461042d57806370a082311461045d57610211565b80631959a0021461033857806323b872dd14610369578063313ce56714610399578063377e11e0146103b757610211565b806312e868be116101e457806312e868be1461029e5780631363bdd3146102ba57806316522173146102ea57806318160ddd1461031a57610211565b806301e336671461021657806306fdde031461023257806308560ace14610250578063095ea7b31461026e575b600080fd5b610230600480360381019061022b9190612290565b6106ab565b005b61023a6107d6565b604051610247919061237c565b60405180910390f35b610258610864565b60405161026591906123ad565b60405180910390f35b610288600480360381019061028391906123c8565b61086a565b6040516102959190612423565b60405180910390f35b6102b860048036038101906102b391906123c8565b610881565b005b6102d460048036038101906102cf919061243e565b610a5a565b6040516102e191906123ad565b60405180910390f35b61030460048036038101906102ff919061243e565b610a7e565b604051610311919061247a565b60405180910390f35b610322610abd565b60405161032f91906123ad565b60405180910390f35b610352600480360381019061034d9190612495565b610b24565b6040516103609291906124c2565b60405180910390f35b610383600480360381019061037e91906124eb565b610b48565b6040516103909190612423565b60405180910390f35b6103a1610c3b565b6040516103ae91906123ad565b60405180910390f35b6103d160048036038101906103cc9190612686565b610c41565b005b6103db610d19565b6040516103e891906123ad565b60405180910390f35b6103f9610d1f565b60405161040691906123ad565b60405180910390f35b610417610d25565b60405161042491906123ad565b60405180910390f35b610447600480360381019061044291906126cf565b610d2b565b60405161045491906123ad565b60405180910390f35b61047760048036038101906104729190612495565b610d50565b60405161048491906123ad565b60405180910390f35b6104a760048036038101906104a2919061243e565b610dce565b6040516104b491906123ad565b60405180910390f35b6104c5610df2565b6040516104d2919061247a565b60405180910390f35b6104e3610e18565b6040516104f091906123ad565b60405180910390f35b610513600480360381019061050e919061270f565b610e1e565b005b61051d611095565b60405161052a919061237c565b60405180910390f35b61054d600480360381019061054891906123c8565b611123565b005b6105576113cd565b6040516105649190612423565b60405180910390f35b610587600480360381019061058291906123c8565b6113e0565b6040516105949190612423565b60405180910390f35b6105a56113f7565b6040516105b291906123ad565b60405180910390f35b6105c36113fd565b005b6105df60048036038101906105da9190612686565b61148b565b005b6105e96115bb565b6040516105f691906123ad565b60405180910390f35b6106196004803603810190610614919061243e565b6115c1565b005b6106236116d9565b005b61063f600480360381019061063a919061274f565b611795565b005b61065b600480360381019061065691906126cf565b6118b9565b60405161066891906123ad565b60405180910390f35b61068b60048036038101906106869190612495565b611940565b005b610695611a75565b6040516106a291906127ee565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107329061287b565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161077692919061289b565b602060405180830381600087803b15801561079057600080fd5b505af11580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c891906128f0565b6107d157600080fd5b505050565b600080546107e39061294c565b80601f016020809104026020016040519081016040528092919081815260200182805461080f9061294c565b801561085c5780601f106108315761010080835404028352916020019161085c565b820191906000526020600020905b81548152906001019060200180831161083f57829003601f168201915b505050505081565b60065481565b6000610877338484611a99565b6001905092915050565b80600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd906129ca565b60405180910390fd5b80600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109589190612a19565b9250508190555080600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109b19190612a4d565b925050819055506109c133610d50565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610a1082610d50565b600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b600060065460035483610a6d9190612aa3565b610a779190612b2c565b9050919050565b600b8181548110610a8e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600754600954600654600854610ad69190612aa3565b610ae09190612b2c565b610aea9190612b2c565b9050600060055443610afc9190612a19565b905060008282610b0c9190612aa3565b905080600654610b1c9190612a4d565b935050505090565b600c6020528060005260406000206000915090508060000154908060010154905082565b6000610b55848484611c64565b6000600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610c19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1090612bcf565b60405180910390fd5b610c2f85338584610c2a9190612a19565b611a99565b60019150509392505050565b600a5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc89061287b565b60405180910390fd5b60005b8151811015610d1557610d02600b838381518110610cf557610cf4612bef565b5b6020026020010151611ef3565b8080610d0d90612c1e565b915050610cd4565b5050565b60095481565b60035481565b60085481565b600d602052816000526040600020602052806000526040600020600091509150505481565b60008060035411610d645760009050610dc9565b600354610d6f610abd565b600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610dbc9190612aa3565b610dc69190612b2c565b90505b919050565b600060035460065483610de19190612aa3565b610deb9190612b2c565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b610e266113fd565b60008211610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090612cb3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ec693929190612cd3565b602060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1891906128f0565b610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e90612d30565b60405180910390fd5b60008060035414610f845760065460035484610f739190612aa3565b610f7d9190612b2c565b9050610f88565b8290505b8060036000828254610f9a9190612a4d565b925050819055508260066000828254610fb39190612a4d565b925050819055506000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160008282546110119190612a4d565b9250508190555061102183610d50565b81600101819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161108791906123ad565b60405180910390a350505050565b600180546110a29061294c565b80601f01602080910402602001604051908101604052809291908181526020018280546110ce9061294c565b801561111b5780601f106110f05761010080835404028352916020019161111b565b820191906000526020600020905b8154815290600101906020018083116110fe57829003601f168201915b505050505081565b61112b6113fd565b6000811161116e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116590612d9c565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548211156111f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ef90612e2e565b60405180910390fd5b60006003548360065461120b9190612aa3565b6112159190612b2c565b90508282600001600082825461122b9190612a19565b9250508190555082600360008282546112449190612a19565b92505081905550806006600082825461125d9190612a19565b9250508190555061126d33610d50565b82600101819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016112d092919061289b565b602060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132291906128f0565b611361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135890612ec0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113bf91906123ad565b60405180910390a350505050565b600260149054906101000a900460ff1681565b60006113ed338484611c64565b6001905092915050565b60055481565b60006007546009546006546008546114159190612aa3565b61141f9190612b2c565b6114299190612b2c565b905060006005544361143b9190612a19565b90506000828261144b9190612aa3565b9050806004600082825461145f9190612a4d565b9250508190555080600660008282546114789190612a4d565b9250508190555043600581905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461151b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115129061287b565b60405180910390fd5b60005b81518110156115b757600b82828151811061153c5761153b612bef565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806115af90612c1e565b91505061151e565b5050565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061164757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611644600b33611f73565b14155b611686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167d90612f52565b60405180910390fd5b61168e6113fd565b60006007549050816007819055507fd0bc40ba146b58f5ae119ff15ce2414671091ec8bf6a9c976ad6426afdac7f0581836040516116cd9291906124c2565b60405180910390a15050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611769576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117609061287b565b60405180910390fd5b600260149054906101000a900460ff1615600260146101000a81548160ff021916908315150217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061181b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611818600b33611f73565b14155b61185a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185190612f52565b60405180910390fd5b600060095490506000600854905083600881905550826009819055507fc2f9abf1c2033dc0e75b1a69bb1bc4d730d20fecd5806de688185eed4b3968ab828285876040516118ab9493929190612f72565b60405180910390a150505050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c79061287b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c6638183604051611a69929190612fb7565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0090613052565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b70906130e4565b60405180910390fd5b80600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611c5791906123ad565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ccb90613176565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3b90613208565b60405180910390fd5b6000611d4f82610a5a565b905080600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015611dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dcd9061329a565b60405180910390fd5b80600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611e289190612a19565b9250508190555080600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611e819190612a4d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611ee591906123ad565b60405180910390a350505050565b6000611eff8383611f73565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811415611f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5b90613306565b60405180910390fd5b611f6e8382612070565b505050565b60008083805490501415611fa9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061206a565b60005b8380549050811015612045578273ffffffffffffffffffffffffffffffffffffffff16848281548110611fe257611fe1612bef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612032578091505061206a565b808061203d90612c1e565b915050611fac565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b81805490508111156120b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ae90613372565b60405180910390fd5b81600183805490506120c99190612a19565b815481106120da576120d9612bef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828154811061211857612117612bef565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180548061217157612170613392565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121e9826121be565b9050919050565b60006121fb826121de565b9050919050565b61220b816121f0565b811461221657600080fd5b50565b60008135905061222881612202565b92915050565b612237816121de565b811461224257600080fd5b50565b6000813590506122548161222e565b92915050565b6000819050919050565b61226d8161225a565b811461227857600080fd5b50565b60008135905061228a81612264565b92915050565b6000806000606084860312156122a9576122a86121b4565b5b60006122b786828701612219565b93505060206122c886828701612245565b92505060406122d98682870161227b565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561231d578082015181840152602081019050612302565b8381111561232c576000848401525b50505050565b6000601f19601f8301169050919050565b600061234e826122e3565b61235881856122ee565b93506123688185602086016122ff565b61237181612332565b840191505092915050565b600060208201905081810360008301526123968184612343565b905092915050565b6123a78161225a565b82525050565b60006020820190506123c2600083018461239e565b92915050565b600080604083850312156123df576123de6121b4565b5b60006123ed85828601612245565b92505060206123fe8582860161227b565b9150509250929050565b60008115159050919050565b61241d81612408565b82525050565b60006020820190506124386000830184612414565b92915050565b600060208284031215612454576124536121b4565b5b60006124628482850161227b565b91505092915050565b612474816121de565b82525050565b600060208201905061248f600083018461246b565b92915050565b6000602082840312156124ab576124aa6121b4565b5b60006124b984828501612245565b91505092915050565b60006040820190506124d7600083018561239e565b6124e4602083018461239e565b9392505050565b600080600060608486031215612504576125036121b4565b5b600061251286828701612245565b935050602061252386828701612245565b92505060406125348682870161227b565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61257b82612332565b810181811067ffffffffffffffff8211171561259a57612599612543565b5b80604052505050565b60006125ad6121aa565b90506125b98282612572565b919050565b600067ffffffffffffffff8211156125d9576125d8612543565b5b602082029050602081019050919050565b600080fd5b60006126026125fd846125be565b6125a3565b90508083825260208201905060208402830185811115612625576126246125ea565b5b835b8181101561264e578061263a8882612245565b845260208401935050602081019050612627565b5050509392505050565b600082601f83011261266d5761266c61253e565b5b813561267d8482602086016125ef565b91505092915050565b60006020828403121561269c5761269b6121b4565b5b600082013567ffffffffffffffff8111156126ba576126b96121b9565b5b6126c684828501612658565b91505092915050565b600080604083850312156126e6576126e56121b4565b5b60006126f485828601612245565b925050602061270585828601612245565b9150509250929050565b60008060408385031215612726576127256121b4565b5b60006127348582860161227b565b925050602061274585828601612245565b9150509250929050565b60008060408385031215612766576127656121b4565b5b60006127748582860161227b565b92505060206127858582860161227b565b9150509250929050565b6000819050919050565b60006127b46127af6127aa846121be565b61278f565b6121be565b9050919050565b60006127c682612799565b9050919050565b60006127d8826127bb565b9050919050565b6127e8816127cd565b82525050565b600060208201905061280360008301846127df565b92915050565b7f436f6d706f756e643a207065726d697474656420746f206f776e6572206f6e6c60008201527f792e000000000000000000000000000000000000000000000000000000000000602082015250565b60006128656022836122ee565b915061287082612809565b604082019050919050565b6000602082019050818103600083015261289481612858565b9050919050565b60006040820190506128b0600083018561246b565b6128bd602083018461239e565b9392505050565b6128cd81612408565b81146128d857600080fd5b50565b6000815190506128ea816128c4565b92915050565b600060208284031215612906576129056121b4565b5b6000612914848285016128db565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061296457607f821691505b602082108114156129785761297761291d565b5b50919050565b7f696e737566666963656e742062616c616e636500000000000000000000000000600082015250565b60006129b46013836122ee565b91506129bf8261297e565b602082019050919050565b600060208201905081810360008301526129e3816129a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a248261225a565b9150612a2f8361225a565b925082821015612a4257612a416129ea565b5b828203905092915050565b6000612a588261225a565b9150612a638361225a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a9857612a976129ea565b5b828201905092915050565b6000612aae8261225a565b9150612ab98361225a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612af257612af16129ea565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b378261225a565b9150612b428361225a565b925082612b5257612b51612afd565b5b828204905092915050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000612bb96028836122ee565b9150612bc482612b5d565b604082019050919050565b60006020820190508181036000830152612be881612bac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612c298261225a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c5c57612c5b6129ea565b5b600182019050919050565b7f436f6d706f756e643a204e6f7468696e6720746f206465706f73697400000000600082015250565b6000612c9d601c836122ee565b9150612ca882612c67565b602082019050919050565b60006020820190508181036000830152612ccc81612c90565b9050919050565b6000606082019050612ce8600083018661246b565b612cf5602083018561246b565b612d02604083018461239e565b949350505050565b50565b6000612d1a6000836122ee565b9150612d2582612d0a565b600082019050919050565b60006020820190508181036000830152612d4981612d0d565b9050919050565b7f436f6d706f756e643a204e6f7468696e6720746f206275726e00000000000000600082015250565b6000612d866019836122ee565b9150612d9182612d50565b602082019050919050565b60006020820190508181036000830152612db581612d79565b9050919050565b7f436f6d706f756e643a20576974686472617720616d6f756e742065786365656460008201527f732062616c616e63650000000000000000000000000000000000000000000000602082015250565b6000612e186029836122ee565b9150612e2382612dbc565b604082019050919050565b60006020820190508181036000830152612e4781612e0b565b9050919050565b7f436f6d706f756e643a204e6f7420656e6f75676820746f6b656e20746f20747260008201527f616e736665720000000000000000000000000000000000000000000000000000602082015250565b6000612eaa6026836122ee565b9150612eb582612e4e565b604082019050919050565b60006020820190508181036000830152612ed981612e9d565b9050919050565b7f436f6d706f756e643a207065726d697474656420746f2061646d696e73206f6e60008201527f6c79000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f3c6022836122ee565b9150612f4782612ee0565b604082019050919050565b60006020820190508181036000830152612f6b81612f2f565b9050919050565b6000608082019050612f87600083018761239e565b612f94602083018661239e565b612fa1604083018561239e565b612fae606083018461239e565b95945050505050565b6000604082019050612fcc600083018561246b565b612fd9602083018461246b565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061303c6024836122ee565b915061304782612fe0565b604082019050919050565b6000602082019050818103600083015261306b8161302f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006130ce6022836122ee565b91506130d982613072565b604082019050919050565b600060208201905081810360008301526130fd816130c1565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006131606025836122ee565b915061316b82613104565b604082019050919050565b6000602082019050818103600083015261318f81613153565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006131f26023836122ee565b91506131fd82613196565b604082019050919050565b60006020820190508181036000830152613221816131e5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006132846026836122ee565b915061328f82613228565b604082019050919050565b600060208201905081810360008301526132b381613277565b9050919050565b7f41525241595f4c49423a20456c656d656e7420646f65736e2774206578697374600082015250565b60006132f06020836122ee565b91506132fb826132ba565b602082019050919050565b6000602082019050818103600083015261331f816132e3565b9050919050565b7f41525241595f4c49423a20496e64657820646f6573206e6f7420657869737400600082015250565b600061335c601f836122ee565b915061336782613326565b602082019050919050565b6000602082019050818103600083015261338b8161334f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212208674d8500a82d2662e2d93857d9e3a3e71c7d583a720bf8d6dd5a120bac6d70864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 9,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 11,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 13,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "revertFlag",
        "offset": 20,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 15,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "totalShares",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 17,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "potentiallyMinted",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 19,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "lastRewardBlock",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 21,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "requiredBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 23,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "blocksInYear",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "apyUp",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "apyDown",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "decimals",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "lpAdmins",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 45,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "userInfo",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_struct(UserInfo)37_storage)"
      },
      {
        "astId": 51,
        "contract": "contracts/CompoundStaking.sol:CompoundStaking",
        "label": "allowances",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(UserInfo)37_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CompoundStaking.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)37_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UserInfo)37_storage": {
        "encoding": "inplace",
        "label": "struct CompoundStaking.UserInfo",
        "members": [
          {
            "astId": 34,
            "contract": "contracts/CompoundStaking.sol:CompoundStaking",
            "label": "share",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 36,
            "contract": "contracts/CompoundStaking.sol:CompoundStaking",
            "label": "tokenAtLastUserAction",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}